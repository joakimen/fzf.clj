(ns fzf.examples
  "Provides examples for using fzf.core binding options directly in a comment block."
  (:require [fzf.core :as fzf]
            [clojure.string :as str]))

(def sample-input ["alpha" "beta" "gamma" "delta" "epsilon"])

(comment
  ;; --- :command-bindings Examples ---

  ;; Example 1: Simple action name
  ;; Press F1 to clear the current query.
  (fzf/fzf {:query "initial query"
            :command-bindings {"f1" ["clear-query"]}}
           sample-input)


  ;; Example 2: Action with :simple-arg
  ;; Press F2 to change the fzf prompt.
  (fzf/fzf {:command-bindings {"f2" [{:action-name "change-prompt"
                                      :simple-arg "F2-Prompt> "}]}}
           sample-input)


  ;; Example 3: Action with :command-string
  ;; Press F3 to execute a shell command (echo selection to a file).
  ;; The {} is an fzf placeholder for the current selection.
  (fzf/fzf {:command-bindings {"f3" [{:action-name "execute"
                                      :command-string "echo {} > /tmp/fzf_selection_cs.txt"}
                                     "accept"]}} ; Accept after executing
           sample-input)
  ;; After running, check: cat /tmp/fzf_selection_cs.txt


  ;; Example 4: Action with :handler-fn (for transform-header)
  ;; Press F4 to transform the header using a Clojure function.
  ;; The handler-fn receives selected/focused lines from {+f}.
  (fzf/fzf {:header {:header-str "Original Header"}
            :command-bindings {"f4" [{:action-name "transform-header"
                                      :handler-fn '(fn [lines]
                                                     (str "Header (from {+f}): " (str/join ", " lines)))}]}}
           sample-input)


  ;; Example 5: Action with :handler-fn (for execute)
  ;; Press F5 to execute a Clojure function with selected items.
  ;; The handler-fn receives selected lines from {+f}.
  ;; Its stdout can be seen if fzf is run in a terminal that shows subprocess output,
  ;; or it can perform side effects like writing to a file.
  (fzf/fzf {:multi true
            :command-bindings {"f5" [{:action-name "execute"
                                      :handler-fn '(fn [lines]
                                                     (spit "/tmp/fzf_handler_exec_output.txt"
                                                           (str "Selected items by handler: " (pr-str lines)))
                                                     ;; This println might not be visible depending on fzf's execution context
                                                     (println (str "Handler processed: " (count lines) " items.")))}
                                     "accept"]}}
           sample-input)
  ;; After running, check: cat /tmp/fzf_handler_exec_output.txt


  ;; Example 6: Action with :bbnc-reload-fn (in-process reload)
  ;; Press F6 to reload the list with new items generated by an in-process Clojure function.
  ;; This function takes the current fzf query string.
  (let [app-data (atom ["initial-a" "initial-b"])]
    (fzf/fzf {:header {:header-str "Press F6 to reload (bbnc)"}
              :command-bindings
              {"f6" [{:action-name "reload"
                      :bbnc-reload-fn (fn [current-query & selections]
                                        (swap! app-data conj (str "new-item-" (count @app-data)))
                                        (println (str "bbnc-reload-fn: Current query '" current-query "', new data: " @app-data))
                                        (filter #(str/includes? % current-query) @app-data))}]}}
             @app-data))


  ;; Example 7: Chained actions
  ;; Press Ctrl-X to: 1. Clear query, 2. Change prompt, 3. Transform header.
  (fzf/fzf {:query "type-something"
            :header {:header-str "Initial Header"}
            :command-bindings {"ctrl-x" ["clear-query"
                                         {:action-name "change-prompt" :simple-arg "Ctrl-X> "}
                                         {:action-name "transform-header"
                                          :command-string "echo 'Header updated by Ctrl-X'"}]}}
           sample-input)

  ;; --- :additional-bindings Examples ---

  ;; Example 9: Combining :command-bindings and :additional-bindings
  ;; F1 uses :command-bindings, F2 uses :additional-bindings
  (fzf/fzf {:command-bindings {"f1" [{:action-name "change-prompt" :simple-arg "F1 Prompt>"}]}
            :additional-bindings ["f2:change-prompt(F2 Raw Prompt>)"]}
           sample-input))
